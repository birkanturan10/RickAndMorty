// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RickAndMorty.Models;

#nullable disable

namespace RickAndMorty.Migrations
{
    [DbContext(typeof(RickAndMortyContext))]
    partial class RickAndMortyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RickAndMorty.Models.R1", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("air_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("episode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("RickAndMorty.Models.R2", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("locationname")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("originname")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("species")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("locationname");

                    b.HasIndex("originname");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("RickAndMorty.Models.R3", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("dimension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Episodes");
                });

            modelBuilder.Entity("RickAndMorty.Models._location", b =>
                {
                    b.Property<string>("name")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("name");

                    b.ToTable("_location");
                });

            modelBuilder.Entity("RickAndMorty.Models._origin", b =>
                {
                    b.Property<string>("name")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("name");

                    b.ToTable("_origin");
                });

            modelBuilder.Entity("RickAndMorty.Models.R2", b =>
                {
                    b.HasOne("RickAndMorty.Models._location", "location")
                        .WithMany()
                        .HasForeignKey("locationname");

                    b.HasOne("RickAndMorty.Models._origin", "origin")
                        .WithMany()
                        .HasForeignKey("originname");

                    b.Navigation("location");

                    b.Navigation("origin");
                });
#pragma warning restore 612, 618
        }
    }
}
